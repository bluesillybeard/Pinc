#include <X11/XKBlib.h>

// This file was generated by AutoDynamicHeader: https://github.com/bluesillybeard/AutoDynamicHeader and modified
typedef Bool(*PFN_XkbIgnoreExtension)(
	Bool			
);
typedef Display*(*PFN_XkbOpenDisplay)(
	char *			,
	int *			,
	int *			,
	int *			,
	int *			,
	int *			
);
typedef Bool(*PFN_XkbQueryExtension)(
	Display *		,
	int *			,
	int *			,
	int *			,
	int *			,
	int *			
);
typedef Bool(*PFN_XkbUseExtension)(
	Display *		,
	int *			,
	int *			
);
typedef Bool(*PFN_XkbLibraryVersion)(
	int *			,
	int *			
);
typedef int(*PFN_XkbSetXlibControls)(
	Display*		,
	unsigned int		,
	unsigned int		
);
typedef int(*PFN_XkbGetXlibControls)(
	Display*		
);
typedef int(*PFN_XkbXlibControlsImplemented)(void);
typedef void(*PFN_XkbSetAtomFuncs)(
	XkbInternAtomFunc	,
	XkbGetAtomNameFunc	
);
typedef KeySym(*PFN_XkbKeycodeToKeysym)(
		Display *	,
#if NeedWidePrototypes
		 unsigned int 	,
#else
		 KeyCode 	,
#endif
		 int 		,
		 int		
);
typedef int(*PFN_XkbKeysymToModifiers)(
    Display *			,
    KeySym 			
);
typedef Bool(*PFN_XkbLookupKeySym)(
    Display *			,
    KeyCode 			,
    unsigned int 		,
    unsigned int *		,
    KeySym *			
);
typedef int(*PFN_XkbLookupKeyBinding)(
    Display *			,
    KeySym 			,
    unsigned int 		,
    char *			,
    int 			,
    int * 			
);
typedef Bool(*PFN_XkbTranslateKeyCode)(
    XkbDescPtr			,
    KeyCode 			,
    unsigned int 		,
    unsigned int *		,
    KeySym *			
);
typedef int(*PFN_XkbTranslateKeySym)(
    Display *			,
    KeySym *			,
    unsigned int 		,
    char *			,
    int 			,
    int *			
);
typedef Bool(*PFN_XkbSetAutoRepeatRate)(
	Display *		,
	unsigned int		,
	unsigned int		,
	unsigned int		
);
typedef Bool(*PFN_XkbGetAutoRepeatRate)(
	Display *		,
	unsigned int		,
	unsigned int *		,
	unsigned int *		
);
typedef Bool(*PFN_XkbChangeEnabledControls)(
	Display *		,
	unsigned int		,
	unsigned int		,
	unsigned int		
);
typedef Bool(*PFN_XkbDeviceBell)(
	Display *		,
	Window			,
	int			,
	int			,
	int			,
	int			,
	Atom			
);
typedef Bool(*PFN_XkbForceDeviceBell)(
	Display *		,
	int			,
	int			,
	int			,
	int			
);
typedef Bool(*PFN_XkbDeviceBellEvent)(
	Display *		,
	Window			,
	int			,
	int			,
	int			,
	int			,
	Atom			
);
typedef Bool(*PFN_XkbBell)(
	Display *		,
	Window			,
	int			,
	Atom			
);
typedef Bool(*PFN_XkbForceBell)(
	Display *		,
	int			
);
typedef Bool(*PFN_XkbBellEvent)(
	Display *		,
	Window			,
	int			,
	Atom			
);
typedef Bool(*PFN_XkbSelectEvents)(
	Display *		,
	unsigned int		,
	unsigned int 		,
	unsigned int 		
);
typedef Bool(*PFN_XkbSelectEventDetails)(
	Display *		,
	unsigned int 		,
	unsigned int 		,
	unsigned long 		,
	unsigned long 		
);
typedef void(*PFN_XkbNoteMapChanges)(
    XkbMapChangesPtr		,
    XkbMapNotifyEvent	*	,
    unsigned int	 	
);
typedef void(*PFN_XkbNoteNameChanges)(
    XkbNameChangesPtr		,
    XkbNamesNotifyEvent	*	,
    unsigned int	 	
);
typedef Status(*PFN_XkbGetIndicatorState)(
	Display *		,
	unsigned int		,
	unsigned int *		
);
typedef Status(*PFN_XkbGetDeviceIndicatorState)(
	Display *		,
	unsigned int		,
	unsigned int		,
	unsigned int		,
	unsigned int *		
);
typedef Status(*PFN_XkbGetIndicatorMap)(
	Display *		,
	unsigned long		,
	XkbDescPtr		
);
typedef Bool(*PFN_XkbSetIndicatorMap)(
	Display *		,
	unsigned long 		,
	XkbDescPtr		
);
typedef Bool(*PFN_XkbGetNamedIndicator)(
	Display *		,
	Atom			,
	int *			,
	Bool *			,
	XkbIndicatorMapPtr	,
	Bool *			
);
typedef Bool(*PFN_XkbGetNamedDeviceIndicator)(
	Display *		,
	unsigned int		,
	unsigned int		,
	unsigned int		,
	Atom			,
	int *			,
	Bool *			,
	XkbIndicatorMapPtr	,
	Bool *			
);
typedef Bool(*PFN_XkbSetNamedIndicator)(
	Display *		,
	Atom			,
	Bool			,
	Bool 			,
	Bool			,
	XkbIndicatorMapPtr	
);
typedef Bool(*PFN_XkbSetNamedDeviceIndicator)(
	Display *		,
	unsigned int		,
	unsigned int		,
	unsigned int		,
	Atom			,
	Bool			,
	Bool 			,
	Bool			,
	XkbIndicatorMapPtr	
);
typedef Bool(*PFN_XkbLockModifiers)(
	Display *		,
	unsigned int 		,
	unsigned int 		,
	unsigned int 		
);
typedef Bool(*PFN_XkbLatchModifiers)(
	Display *		,
	unsigned int 		,
	unsigned int 		,
	unsigned int 		
);
typedef Bool(*PFN_XkbLockGroup)(
	Display *		,
	unsigned int 		,
	unsigned int 		
);
typedef Bool(*PFN_XkbLatchGroup)(
	Display *		,
	unsigned int 		,
	unsigned int 		
);
typedef Bool(*PFN_XkbSetServerInternalMods)(
	Display *		,
	unsigned int 		,
	unsigned int 		,
	unsigned int 		,
	unsigned int		,
	unsigned int		
);
typedef Bool(*PFN_XkbSetIgnoreLockMods)(
	Display *		,
	unsigned int 		,
	unsigned int 		,
	unsigned int 		,
	unsigned int		,
	unsigned int		
);
typedef Bool(*PFN_XkbVirtualModsToReal)(
	XkbDescPtr		,
	unsigned int		,
	unsigned int *		
);
typedef Bool(*PFN_XkbComputeEffectiveMap)(
	XkbDescPtr 		,
	XkbKeyTypePtr		,
	unsigned char *		
);
typedef Status(*PFN_XkbInitCanonicalKeyTypes)(
    XkbDescPtr			,
    unsigned int		,
    int				
);
typedef XkbDescPtr(*PFN_XkbAllocKeyboard)(
	void
);
typedef void(*PFN_XkbFreeKeyboard)(
	XkbDescPtr		,
	unsigned int		,
	Bool			
);
typedef Status(*PFN_XkbAllocClientMap)(
	XkbDescPtr		,
	unsigned int		,
	unsigned int		
);
typedef Status(*PFN_XkbAllocServerMap)(
	XkbDescPtr		,
	unsigned int		,
	unsigned int		
);
typedef void(*PFN_XkbFreeClientMap)(
    XkbDescPtr			,
    unsigned int		,
    Bool			
);
typedef void(*PFN_XkbFreeServerMap)(
    XkbDescPtr			,
    unsigned int		,
    Bool			
);
typedef XkbKeyTypePtr(*PFN_XkbAddKeyType)(
    XkbDescPtr			,
    Atom			,
    int				,
    Bool			,
    int				
);
typedef Status(*PFN_XkbAllocIndicatorMaps)(
	XkbDescPtr		
);
typedef void(*PFN_XkbFreeIndicatorMaps)(
    XkbDescPtr			
);
typedef XkbDescPtr(*PFN_XkbGetMap)(
	Display *		,
	unsigned int 		,
	unsigned int 		
);
typedef Status(*PFN_XkbGetUpdatedMap)(
	Display *		,
	unsigned int 		,
	XkbDescPtr		
);
typedef Status(*PFN_XkbGetMapChanges)(
    Display *			,
    XkbDescPtr			,
    XkbMapChangesPtr		
);
typedef Status(*PFN_XkbRefreshKeyboardMapping)(
    XkbMapNotifyEvent *		
);
typedef Status(*PFN_XkbGetKeyTypes)(
    Display *			,
    unsigned int		,
    unsigned int 		,
    XkbDescPtr			
);
typedef Status(*PFN_XkbGetKeySyms)(
    Display *			,
    unsigned int		,
    unsigned int		,
    XkbDescPtr			
);
typedef Status(*PFN_XkbGetKeyActions)(
    Display *			,
    unsigned int 		,
    unsigned int 		,
    XkbDescPtr			
);
typedef Status(*PFN_XkbGetKeyBehaviors)(
	Display *		,
	unsigned int 		,
	unsigned int		,
	XkbDescPtr		
);
typedef Status(*PFN_XkbGetVirtualMods)(
	Display *		,
	unsigned int 		,
	XkbDescPtr		
);
typedef Status(*PFN_XkbGetKeyExplicitComponents)(
	Display *		,
	unsigned int 		,
	unsigned int		,
	XkbDescPtr		
);
typedef Status(*PFN_XkbGetKeyModifierMap)(
	Display *		,
	unsigned int 		,
	unsigned int		,
	XkbDescPtr		
);
typedef Status(*PFN_XkbGetKeyVirtualModMap)(
	Display *		,
	unsigned int		,
	unsigned int		,
	XkbDescPtr		
);
typedef Status(*PFN_XkbAllocControls)(
	XkbDescPtr		,
	unsigned int		
);
typedef void(*PFN_XkbFreeControls)(
	XkbDescPtr		,
	unsigned int		,
	Bool			
);
typedef Status(*PFN_XkbGetControls)(
	Display *		,
	unsigned long		,
	XkbDescPtr		
);
typedef Bool(*PFN_XkbSetControls)(
	Display *		,
	unsigned long		,
	XkbDescPtr		
);
typedef void(*PFN_XkbNoteControlsChanges)(
    XkbControlsChangesPtr	,
    XkbControlsNotifyEvent *	,
    unsigned int	 	
);
typedef Status(*PFN_XkbAllocCompatMap)(
    XkbDescPtr			,
    unsigned int		,
    unsigned int		
);
typedef void(*PFN_XkbFreeCompatMap)(
    XkbDescPtr			,
    unsigned int		,
    Bool			
);
typedef Status(*PFN_XkbGetCompatMap)(
	Display *		,
	unsigned int 		,
	XkbDescPtr 		
);
typedef Bool(*PFN_XkbSetCompatMap)(
	Display *		,
	unsigned int 		,
	XkbDescPtr 		,
	Bool			
);
typedef XkbSymInterpretPtr(*PFN_XkbAddSymInterpret)(
	XkbDescPtr		,
	XkbSymInterpretPtr	,
	Bool			,
	XkbChangesPtr		
);
typedef Status(*PFN_XkbAllocNames)(
	XkbDescPtr		,
	unsigned int		,
	int			,
	int			
);
typedef Status(*PFN_XkbGetNames)(
	Display *		,
	unsigned int		,
	XkbDescPtr		
);
typedef Bool(*PFN_XkbSetNames)(
	Display *		,
	unsigned int		,
	unsigned int		,
	unsigned int		,
	XkbDescPtr		
);
typedef Bool(*PFN_XkbChangeNames)(
	Display *		,
	XkbDescPtr		,
	XkbNameChangesPtr	
);
typedef void(*PFN_XkbFreeNames)(
	XkbDescPtr		,
	unsigned int		,
	Bool			
);
typedef Status(*PFN_XkbGetState)(
	Display *		,
	unsigned int 		,
	XkbStatePtr		
);
typedef Bool(*PFN_XkbSetMap)(
	Display *		,
	unsigned int		,
	XkbDescPtr		
);
typedef Bool(*PFN_XkbChangeMap)(
	Display*		,
	XkbDescPtr		,
	XkbMapChangesPtr	
);
typedef Bool(*PFN_XkbSetDetectableAutoRepeat)(
	Display *		,
	Bool			,
	Bool *			
);
typedef Bool(*PFN_XkbGetDetectableAutoRepeat)(
	Display *		,
	Bool *			
);
typedef Bool(*PFN_XkbSetAutoResetControls)(
    Display *			,
    unsigned int 		,
    unsigned int *		,
    unsigned int *		
);
typedef Bool(*PFN_XkbGetAutoResetControls)(
    Display *			,
    unsigned int *		,
    unsigned int *		
);
typedef Bool(*PFN_XkbSetPerClientControls)(
    Display *			,
    unsigned int		,
    unsigned int *		
);
typedef Bool(*PFN_XkbGetPerClientControls)(
    Display *			,
    unsigned int *		
);
typedef Status(*PFN_XkbCopyKeyType)(
    XkbKeyTypePtr	,
    XkbKeyTypePtr	
);
typedef Status(*PFN_XkbCopyKeyTypes)(
    XkbKeyTypePtr	,
    XkbKeyTypePtr	,
    int			
);
typedef Status(*PFN_XkbResizeKeyType)(
    XkbDescPtr		,
    int			,
    int			,
    Bool		,
    int			
);
typedef KeySym*(*PFN_XkbResizeKeySyms)(
	XkbDescPtr		,
	int 			,
	int 			
);
typedef XkbAction*(*PFN_XkbResizeKeyActions)(
	XkbDescPtr		,
	int 			,
	int 			
);
typedef Status(*PFN_XkbChangeTypesOfKey)(
	XkbDescPtr		,
	int 			,
	int			,
	unsigned int		,
	int *			,
	XkbMapChangesPtr	
);
typedef Status(*PFN_XkbChangeKeycodeRange)(
	XkbDescPtr		,
	int			,
	int			,
	XkbChangesPtr		
);
typedef XkbComponentListPtr(*PFN_XkbListComponents)(
	Display *		,
	unsigned int		,
	XkbComponentNamesPtr	,
	int *			
);
typedef void(*PFN_XkbFreeComponentList)(
	XkbComponentListPtr	
);
typedef XkbDescPtr(*PFN_XkbGetKeyboard)(
	Display *		,
	unsigned int 		,
	unsigned int 		
);
typedef XkbDescPtr(*PFN_XkbGetKeyboardByName)(
    Display *			,
    unsigned int		,
    XkbComponentNamesPtr	,
    unsigned int 		,
    unsigned int 		,
    Bool			
);
typedef int(*PFN_XkbKeyTypesForCoreSymbols)(	
    XkbDescPtr	,			
    int		,		
    KeySym *	,		
    unsigned int	,	
    int *	,		
    KeySym * 			
);
typedef Bool(*PFN_XkbApplyCompatMapToKey)(	
    XkbDescPtr		,		
    KeyCode		,		
    XkbChangesPtr			
);
typedef Bool(*PFN_XkbUpdateMapFromCore)( 
    XkbDescPtr		,		
    KeyCode		,	
    int			, 	
    int			,	
    KeySym *		,	
    XkbChangesPtr			
);
typedef XkbDeviceLedInfoPtr(*PFN_XkbAddDeviceLedInfo)(
	XkbDeviceInfoPtr	,
	unsigned int		,
	unsigned int		
);
typedef Status(*PFN_XkbResizeDeviceButtonActions)(
	XkbDeviceInfoPtr	,
	unsigned int		
);
typedef XkbDeviceInfoPtr(*PFN_XkbAllocDeviceInfo)(
	unsigned int		,
	unsigned int		,
	unsigned int		
);
typedef void(*PFN_XkbFreeDeviceInfo)(
	XkbDeviceInfoPtr	,
	unsigned int		,
	Bool			
);
typedef void(*PFN_XkbNoteDeviceChanges)(
    XkbDeviceChangesPtr			,
    XkbExtensionDeviceNotifyEvent *	,
    unsigned int	 		
);
typedef XkbDeviceInfoPtr(*PFN_XkbGetDeviceInfo)(
	Display *		,
	unsigned int 		,
	unsigned int		,
	unsigned int		,
	unsigned int		
);
typedef Status(*PFN_XkbGetDeviceInfoChanges)(
	Display *		,
	XkbDeviceInfoPtr	,
	XkbDeviceChangesPtr 	
);
typedef Status(*PFN_XkbGetDeviceButtonActions)(
	Display *		,
	XkbDeviceInfoPtr	,
	Bool			,
	unsigned int		,
	unsigned int		
);
typedef Status(*PFN_XkbGetDeviceLedInfo)(
	Display *		,
	XkbDeviceInfoPtr	,
	unsigned int		,
	unsigned int		,
	unsigned int		
);
typedef Bool(*PFN_XkbSetDeviceInfo)(
	Display *		,
	unsigned int		,
	XkbDeviceInfoPtr	
);
typedef Bool(*PFN_XkbChangeDeviceInfo)(
	Display*		,
	XkbDeviceInfoPtr	,
	XkbDeviceChangesPtr	
);
typedef Bool(*PFN_XkbSetDeviceLedInfo)(
	Display *		,
	XkbDeviceInfoPtr	,
	unsigned int 		,
	unsigned int		,
	unsigned int		
);
typedef Bool(*PFN_XkbSetDeviceButtonActions)(
	Display *		,
	XkbDeviceInfoPtr	,
	unsigned int		,
	unsigned int		
);
typedef char(*PFN_XkbToControl)(
	char		
);
typedef Bool(*PFN_XkbSetDebuggingFlags)(
    Display *		,
    unsigned int	,
    unsigned int	,
    char *		,
    unsigned int	,
    unsigned int	,
    unsigned int *	,
    unsigned int *	
);
typedef Bool(*PFN_XkbApplyVirtualModChanges)(
   XkbDescPtr		,
   unsigned int		,
   XkbChangesPtr	
);
typedef Bool(*PFN_XkbUpdateActionVirtualMods)(
	XkbDescPtr		,
	XkbAction *		,
	unsigned int		
);
typedef void(*PFN_XkbUpdateKeyTypeVirtualMods)(
	XkbDescPtr		,
	XkbKeyTypePtr		,
	unsigned int		,
	XkbChangesPtr		
);
PFN_XkbIgnoreExtension src_XkbIgnoreExtension;
PFN_XkbOpenDisplay src_XkbOpenDisplay;
PFN_XkbQueryExtension src_XkbQueryExtension;
PFN_XkbUseExtension src_XkbUseExtension;
PFN_XkbLibraryVersion src_XkbLibraryVersion;
PFN_XkbSetXlibControls src_XkbSetXlibControls;
PFN_XkbGetXlibControls src_XkbGetXlibControls;
PFN_XkbXlibControlsImplemented src_XkbXlibControlsImplemented;
PFN_XkbSetAtomFuncs src_XkbSetAtomFuncs;
PFN_XkbKeycodeToKeysym src_XkbKeycodeToKeysym;
PFN_XkbKeysymToModifiers src_XkbKeysymToModifiers;
PFN_XkbLookupKeySym src_XkbLookupKeySym;
PFN_XkbLookupKeyBinding src_XkbLookupKeyBinding;
PFN_XkbTranslateKeyCode src_XkbTranslateKeyCode;
PFN_XkbTranslateKeySym src_XkbTranslateKeySym;
PFN_XkbSetAutoRepeatRate src_XkbSetAutoRepeatRate;
PFN_XkbGetAutoRepeatRate src_XkbGetAutoRepeatRate;
PFN_XkbChangeEnabledControls src_XkbChangeEnabledControls;
PFN_XkbDeviceBell src_XkbDeviceBell;
PFN_XkbForceDeviceBell src_XkbForceDeviceBell;
PFN_XkbDeviceBellEvent src_XkbDeviceBellEvent;
PFN_XkbBell src_XkbBell;
PFN_XkbForceBell src_XkbForceBell;
PFN_XkbBellEvent src_XkbBellEvent;
PFN_XkbSelectEvents src_XkbSelectEvents;
PFN_XkbSelectEventDetails src_XkbSelectEventDetails;
PFN_XkbNoteMapChanges src_XkbNoteMapChanges;
PFN_XkbNoteNameChanges src_XkbNoteNameChanges;
PFN_XkbGetIndicatorState src_XkbGetIndicatorState;
PFN_XkbGetDeviceIndicatorState src_XkbGetDeviceIndicatorState;
PFN_XkbGetIndicatorMap src_XkbGetIndicatorMap;
PFN_XkbSetIndicatorMap src_XkbSetIndicatorMap;
PFN_XkbGetNamedIndicator src_XkbGetNamedIndicator;
PFN_XkbGetNamedDeviceIndicator src_XkbGetNamedDeviceIndicator;
PFN_XkbSetNamedIndicator src_XkbSetNamedIndicator;
PFN_XkbSetNamedDeviceIndicator src_XkbSetNamedDeviceIndicator;
PFN_XkbLockModifiers src_XkbLockModifiers;
PFN_XkbLatchModifiers src_XkbLatchModifiers;
PFN_XkbLockGroup src_XkbLockGroup;
PFN_XkbLatchGroup src_XkbLatchGroup;
PFN_XkbSetServerInternalMods src_XkbSetServerInternalMods;
PFN_XkbSetIgnoreLockMods src_XkbSetIgnoreLockMods;
PFN_XkbVirtualModsToReal src_XkbVirtualModsToReal;
PFN_XkbComputeEffectiveMap src_XkbComputeEffectiveMap;
PFN_XkbInitCanonicalKeyTypes src_XkbInitCanonicalKeyTypes;
PFN_XkbAllocKeyboard src_XkbAllocKeyboard;
PFN_XkbFreeKeyboard src_XkbFreeKeyboard;
PFN_XkbAllocClientMap src_XkbAllocClientMap;
PFN_XkbAllocServerMap src_XkbAllocServerMap;
PFN_XkbFreeClientMap src_XkbFreeClientMap;
PFN_XkbFreeServerMap src_XkbFreeServerMap;
PFN_XkbAddKeyType src_XkbAddKeyType;
PFN_XkbAllocIndicatorMaps src_XkbAllocIndicatorMaps;
PFN_XkbFreeIndicatorMaps src_XkbFreeIndicatorMaps;
PFN_XkbGetMap src_XkbGetMap;
PFN_XkbGetUpdatedMap src_XkbGetUpdatedMap;
PFN_XkbGetMapChanges src_XkbGetMapChanges;
PFN_XkbRefreshKeyboardMapping src_XkbRefreshKeyboardMapping;
PFN_XkbGetKeyTypes src_XkbGetKeyTypes;
PFN_XkbGetKeySyms src_XkbGetKeySyms;
PFN_XkbGetKeyActions src_XkbGetKeyActions;
PFN_XkbGetKeyBehaviors src_XkbGetKeyBehaviors;
PFN_XkbGetVirtualMods src_XkbGetVirtualMods;
PFN_XkbGetKeyExplicitComponents src_XkbGetKeyExplicitComponents;
PFN_XkbGetKeyModifierMap src_XkbGetKeyModifierMap;
PFN_XkbGetKeyVirtualModMap src_XkbGetKeyVirtualModMap;
PFN_XkbAllocControls src_XkbAllocControls;
PFN_XkbFreeControls src_XkbFreeControls;
PFN_XkbGetControls src_XkbGetControls;
PFN_XkbSetControls src_XkbSetControls;
PFN_XkbNoteControlsChanges src_XkbNoteControlsChanges;
PFN_XkbAllocCompatMap src_XkbAllocCompatMap;
PFN_XkbFreeCompatMap src_XkbFreeCompatMap;
PFN_XkbGetCompatMap src_XkbGetCompatMap;
PFN_XkbSetCompatMap src_XkbSetCompatMap;
PFN_XkbAddSymInterpret src_XkbAddSymInterpret;
PFN_XkbAllocNames src_XkbAllocNames;
PFN_XkbGetNames src_XkbGetNames;
PFN_XkbSetNames src_XkbSetNames;
PFN_XkbChangeNames src_XkbChangeNames;
PFN_XkbFreeNames src_XkbFreeNames;
PFN_XkbGetState src_XkbGetState;
PFN_XkbSetMap src_XkbSetMap;
PFN_XkbChangeMap src_XkbChangeMap;
PFN_XkbSetDetectableAutoRepeat src_XkbSetDetectableAutoRepeat;
PFN_XkbGetDetectableAutoRepeat src_XkbGetDetectableAutoRepeat;
PFN_XkbSetAutoResetControls src_XkbSetAutoResetControls;
PFN_XkbGetAutoResetControls src_XkbGetAutoResetControls;
PFN_XkbSetPerClientControls src_XkbSetPerClientControls;
PFN_XkbGetPerClientControls src_XkbGetPerClientControls;
PFN_XkbCopyKeyType src_XkbCopyKeyType;
PFN_XkbCopyKeyTypes src_XkbCopyKeyTypes;
PFN_XkbResizeKeyType src_XkbResizeKeyType;
PFN_XkbResizeKeySyms src_XkbResizeKeySyms;
PFN_XkbResizeKeyActions src_XkbResizeKeyActions;
PFN_XkbChangeTypesOfKey src_XkbChangeTypesOfKey;
PFN_XkbChangeKeycodeRange src_XkbChangeKeycodeRange;
PFN_XkbListComponents src_XkbListComponents;
PFN_XkbFreeComponentList src_XkbFreeComponentList;
PFN_XkbGetKeyboard src_XkbGetKeyboard;
PFN_XkbGetKeyboardByName src_XkbGetKeyboardByName;
PFN_XkbKeyTypesForCoreSymbols src_XkbKeyTypesForCoreSymbols;
PFN_XkbApplyCompatMapToKey src_XkbApplyCompatMapToKey;
PFN_XkbUpdateMapFromCore src_XkbUpdateMapFromCore;
PFN_XkbAddDeviceLedInfo src_XkbAddDeviceLedInfo;
PFN_XkbResizeDeviceButtonActions src_XkbResizeDeviceButtonActions;
PFN_XkbAllocDeviceInfo src_XkbAllocDeviceInfo;
PFN_XkbFreeDeviceInfo src_XkbFreeDeviceInfo;
PFN_XkbNoteDeviceChanges src_XkbNoteDeviceChanges;
PFN_XkbGetDeviceInfo src_XkbGetDeviceInfo;
PFN_XkbGetDeviceInfoChanges src_XkbGetDeviceInfoChanges;
PFN_XkbGetDeviceButtonActions src_XkbGetDeviceButtonActions;
PFN_XkbGetDeviceLedInfo src_XkbGetDeviceLedInfo;
PFN_XkbSetDeviceInfo src_XkbSetDeviceInfo;
PFN_XkbChangeDeviceInfo src_XkbChangeDeviceInfo;
PFN_XkbSetDeviceLedInfo src_XkbSetDeviceLedInfo;
PFN_XkbSetDeviceButtonActions src_XkbSetDeviceButtonActions;
PFN_XkbToControl src_XkbToControl;
PFN_XkbSetDebuggingFlags src_XkbSetDebuggingFlags;
PFN_XkbApplyVirtualModChanges src_XkbApplyVirtualModChanges;
PFN_XkbUpdateActionVirtualMods src_XkbUpdateActionVirtualMods;
PFN_XkbUpdateKeyTypeVirtualMods src_XkbUpdateKeyTypeVirtualMods;
#define XkbIgnoreExtension src_XkbIgnoreExtension
#define XkbOpenDisplay src_XkbOpenDisplay
#define XkbQueryExtension src_XkbQueryExtension
#define XkbUseExtension src_XkbUseExtension
#define XkbLibraryVersion src_XkbLibraryVersion
#define XkbSetXlibControls src_XkbSetXlibControls
#define XkbGetXlibControls src_XkbGetXlibControls
#define XkbXlibControlsImplemented src_XkbXlibControlsImplemented
#define XkbSetAtomFuncs src_XkbSetAtomFuncs
#define XkbKeycodeToKeysym src_XkbKeycodeToKeysym
#define XkbKeysymToModifiers src_XkbKeysymToModifiers
#define XkbLookupKeySym src_XkbLookupKeySym
#define XkbLookupKeyBinding src_XkbLookupKeyBinding
#define XkbTranslateKeyCode src_XkbTranslateKeyCode
#define XkbTranslateKeySym src_XkbTranslateKeySym
#define XkbSetAutoRepeatRate src_XkbSetAutoRepeatRate
#define XkbGetAutoRepeatRate src_XkbGetAutoRepeatRate
#define XkbChangeEnabledControls src_XkbChangeEnabledControls
#define XkbDeviceBell src_XkbDeviceBell
#define XkbForceDeviceBell src_XkbForceDeviceBell
#define XkbDeviceBellEvent src_XkbDeviceBellEvent
#define XkbBell src_XkbBell
#define XkbForceBell src_XkbForceBell
#define XkbBellEvent src_XkbBellEvent
#define XkbSelectEvents src_XkbSelectEvents
#define XkbSelectEventDetails src_XkbSelectEventDetails
#define XkbNoteMapChanges src_XkbNoteMapChanges
#define XkbNoteNameChanges src_XkbNoteNameChanges
#define XkbGetIndicatorState src_XkbGetIndicatorState
#define XkbGetDeviceIndicatorState src_XkbGetDeviceIndicatorState
#define XkbGetIndicatorMap src_XkbGetIndicatorMap
#define XkbSetIndicatorMap src_XkbSetIndicatorMap
#define XkbGetNamedIndicator src_XkbGetNamedIndicator
#define XkbGetNamedDeviceIndicator src_XkbGetNamedDeviceIndicator
#define XkbSetNamedIndicator src_XkbSetNamedIndicator
#define XkbSetNamedDeviceIndicator src_XkbSetNamedDeviceIndicator
#define XkbLockModifiers src_XkbLockModifiers
#define XkbLatchModifiers src_XkbLatchModifiers
#define XkbLockGroup src_XkbLockGroup
#define XkbLatchGroup src_XkbLatchGroup
#define XkbSetServerInternalMods src_XkbSetServerInternalMods
#define XkbSetIgnoreLockMods src_XkbSetIgnoreLockMods
#define XkbVirtualModsToReal src_XkbVirtualModsToReal
#define XkbComputeEffectiveMap src_XkbComputeEffectiveMap
#define XkbInitCanonicalKeyTypes src_XkbInitCanonicalKeyTypes
#define XkbAllocKeyboard src_XkbAllocKeyboard
#define XkbFreeKeyboard src_XkbFreeKeyboard
#define XkbAllocClientMap src_XkbAllocClientMap
#define XkbAllocServerMap src_XkbAllocServerMap
#define XkbFreeClientMap src_XkbFreeClientMap
#define XkbFreeServerMap src_XkbFreeServerMap
#define XkbAddKeyType src_XkbAddKeyType
#define XkbAllocIndicatorMaps src_XkbAllocIndicatorMaps
#define XkbFreeIndicatorMaps src_XkbFreeIndicatorMaps
#define XkbGetMap src_XkbGetMap
#define XkbGetUpdatedMap src_XkbGetUpdatedMap
#define XkbGetMapChanges src_XkbGetMapChanges
#define XkbRefreshKeyboardMapping src_XkbRefreshKeyboardMapping
#define XkbGetKeyTypes src_XkbGetKeyTypes
#define XkbGetKeySyms src_XkbGetKeySyms
#define XkbGetKeyActions src_XkbGetKeyActions
#define XkbGetKeyBehaviors src_XkbGetKeyBehaviors
#define XkbGetVirtualMods src_XkbGetVirtualMods
#define XkbGetKeyExplicitComponents src_XkbGetKeyExplicitComponents
#define XkbGetKeyModifierMap src_XkbGetKeyModifierMap
#define XkbGetKeyVirtualModMap src_XkbGetKeyVirtualModMap
#define XkbAllocControls src_XkbAllocControls
#define XkbFreeControls src_XkbFreeControls
#define XkbGetControls src_XkbGetControls
#define XkbSetControls src_XkbSetControls
#define XkbNoteControlsChanges src_XkbNoteControlsChanges
#define XkbAllocCompatMap src_XkbAllocCompatMap
#define XkbFreeCompatMap src_XkbFreeCompatMap
#define XkbGetCompatMap src_XkbGetCompatMap
#define XkbSetCompatMap src_XkbSetCompatMap
#define XkbAddSymInterpret src_XkbAddSymInterpret
#define XkbAllocNames src_XkbAllocNames
#define XkbGetNames src_XkbGetNames
#define XkbSetNames src_XkbSetNames
#define XkbChangeNames src_XkbChangeNames
#define XkbFreeNames src_XkbFreeNames
#define XkbGetState src_XkbGetState
#define XkbSetMap src_XkbSetMap
#define XkbChangeMap src_XkbChangeMap
#define XkbSetDetectableAutoRepeat src_XkbSetDetectableAutoRepeat
#define XkbGetDetectableAutoRepeat src_XkbGetDetectableAutoRepeat
#define XkbSetAutoResetControls src_XkbSetAutoResetControls
#define XkbGetAutoResetControls src_XkbGetAutoResetControls
#define XkbSetPerClientControls src_XkbSetPerClientControls
#define XkbGetPerClientControls src_XkbGetPerClientControls
#define XkbCopyKeyType src_XkbCopyKeyType
#define XkbCopyKeyTypes src_XkbCopyKeyTypes
#define XkbResizeKeyType src_XkbResizeKeyType
#define XkbResizeKeySyms src_XkbResizeKeySyms
#define XkbResizeKeyActions src_XkbResizeKeyActions
#define XkbChangeTypesOfKey src_XkbChangeTypesOfKey
#define XkbChangeKeycodeRange src_XkbChangeKeycodeRange
#define XkbListComponents src_XkbListComponents
#define XkbFreeComponentList src_XkbFreeComponentList
#define XkbGetKeyboard src_XkbGetKeyboard
#define XkbGetKeyboardByName src_XkbGetKeyboardByName
#define XkbKeyTypesForCoreSymbols src_XkbKeyTypesForCoreSymbols
#define XkbApplyCompatMapToKey src_XkbApplyCompatMapToKey
#define XkbUpdateMapFromCore src_XkbUpdateMapFromCore
#define XkbAddDeviceLedInfo src_XkbAddDeviceLedInfo
#define XkbResizeDeviceButtonActions src_XkbResizeDeviceButtonActions
#define XkbAllocDeviceInfo src_XkbAllocDeviceInfo
#define XkbFreeDeviceInfo src_XkbFreeDeviceInfo
#define XkbNoteDeviceChanges src_XkbNoteDeviceChanges
#define XkbGetDeviceInfo src_XkbGetDeviceInfo
#define XkbGetDeviceInfoChanges src_XkbGetDeviceInfoChanges
#define XkbGetDeviceButtonActions src_XkbGetDeviceButtonActions
#define XkbGetDeviceLedInfo src_XkbGetDeviceLedInfo
#define XkbSetDeviceInfo src_XkbSetDeviceInfo
#define XkbChangeDeviceInfo src_XkbChangeDeviceInfo
#define XkbSetDeviceLedInfo src_XkbSetDeviceLedInfo
#define XkbSetDeviceButtonActions src_XkbSetDeviceButtonActions
#define XkbToControl src_XkbToControl
#define XkbSetDebuggingFlags src_XkbSetDebuggingFlags
#define XkbApplyVirtualModChanges src_XkbApplyVirtualModChanges
#define XkbUpdateActionVirtualMods src_XkbUpdateActionVirtualMods
#define XkbUpdateKeyTypeVirtualMods src_XkbUpdateKeyTypeVirtualMods
void loadXkb(void* context, void *(*load_fn)(void* context, const char* name)) {
    src_XkbIgnoreExtension = (PFN_XkbIgnoreExtension)load_fn(context, "XkbIgnoreExtension");
    src_XkbOpenDisplay = (PFN_XkbOpenDisplay)load_fn(context, "XkbOpenDisplay");
    src_XkbQueryExtension = (PFN_XkbQueryExtension)load_fn(context, "XkbQueryExtension");
    src_XkbUseExtension = (PFN_XkbUseExtension)load_fn(context, "XkbUseExtension");
    src_XkbLibraryVersion = (PFN_XkbLibraryVersion)load_fn(context, "XkbLibraryVersion");
    src_XkbSetXlibControls = (PFN_XkbSetXlibControls)load_fn(context, "XkbSetXlibControls");
    src_XkbGetXlibControls = (PFN_XkbGetXlibControls)load_fn(context, "XkbGetXlibControls");
    src_XkbXlibControlsImplemented = (PFN_XkbXlibControlsImplemented)load_fn(context, "XkbXlibControlsImplemented");
    src_XkbSetAtomFuncs = (PFN_XkbSetAtomFuncs)load_fn(context, "XkbSetAtomFuncs");
    src_XkbKeycodeToKeysym = (PFN_XkbKeycodeToKeysym)load_fn(context, "XkbKeycodeToKeysym");
    src_XkbKeysymToModifiers = (PFN_XkbKeysymToModifiers)load_fn(context, "XkbKeysymToModifiers");
    src_XkbLookupKeySym = (PFN_XkbLookupKeySym)load_fn(context, "XkbLookupKeySym");
    src_XkbLookupKeyBinding = (PFN_XkbLookupKeyBinding)load_fn(context, "XkbLookupKeyBinding");
    src_XkbTranslateKeyCode = (PFN_XkbTranslateKeyCode)load_fn(context, "XkbTranslateKeyCode");
    src_XkbTranslateKeySym = (PFN_XkbTranslateKeySym)load_fn(context, "XkbTranslateKeySym");
    src_XkbSetAutoRepeatRate = (PFN_XkbSetAutoRepeatRate)load_fn(context, "XkbSetAutoRepeatRate");
    src_XkbGetAutoRepeatRate = (PFN_XkbGetAutoRepeatRate)load_fn(context, "XkbGetAutoRepeatRate");
    src_XkbChangeEnabledControls = (PFN_XkbChangeEnabledControls)load_fn(context, "XkbChangeEnabledControls");
    src_XkbDeviceBell = (PFN_XkbDeviceBell)load_fn(context, "XkbDeviceBell");
    src_XkbForceDeviceBell = (PFN_XkbForceDeviceBell)load_fn(context, "XkbForceDeviceBell");
    src_XkbDeviceBellEvent = (PFN_XkbDeviceBellEvent)load_fn(context, "XkbDeviceBellEvent");
    src_XkbBell = (PFN_XkbBell)load_fn(context, "XkbBell");
    src_XkbForceBell = (PFN_XkbForceBell)load_fn(context, "XkbForceBell");
    src_XkbBellEvent = (PFN_XkbBellEvent)load_fn(context, "XkbBellEvent");
    src_XkbSelectEvents = (PFN_XkbSelectEvents)load_fn(context, "XkbSelectEvents");
    src_XkbSelectEventDetails = (PFN_XkbSelectEventDetails)load_fn(context, "XkbSelectEventDetails");
    src_XkbNoteMapChanges = (PFN_XkbNoteMapChanges)load_fn(context, "XkbNoteMapChanges");
    src_XkbNoteNameChanges = (PFN_XkbNoteNameChanges)load_fn(context, "XkbNoteNameChanges");
    src_XkbGetIndicatorState = (PFN_XkbGetIndicatorState)load_fn(context, "XkbGetIndicatorState");
    src_XkbGetDeviceIndicatorState = (PFN_XkbGetDeviceIndicatorState)load_fn(context, "XkbGetDeviceIndicatorState");
    src_XkbGetIndicatorMap = (PFN_XkbGetIndicatorMap)load_fn(context, "XkbGetIndicatorMap");
    src_XkbSetIndicatorMap = (PFN_XkbSetIndicatorMap)load_fn(context, "XkbSetIndicatorMap");
    src_XkbGetNamedIndicator = (PFN_XkbGetNamedIndicator)load_fn(context, "XkbGetNamedIndicator");
    src_XkbGetNamedDeviceIndicator = (PFN_XkbGetNamedDeviceIndicator)load_fn(context, "XkbGetNamedDeviceIndicator");
    src_XkbSetNamedIndicator = (PFN_XkbSetNamedIndicator)load_fn(context, "XkbSetNamedIndicator");
    src_XkbSetNamedDeviceIndicator = (PFN_XkbSetNamedDeviceIndicator)load_fn(context, "XkbSetNamedDeviceIndicator");
    src_XkbLockModifiers = (PFN_XkbLockModifiers)load_fn(context, "XkbLockModifiers");
    src_XkbLatchModifiers = (PFN_XkbLatchModifiers)load_fn(context, "XkbLatchModifiers");
    src_XkbLockGroup = (PFN_XkbLockGroup)load_fn(context, "XkbLockGroup");
    src_XkbLatchGroup = (PFN_XkbLatchGroup)load_fn(context, "XkbLatchGroup");
    src_XkbSetServerInternalMods = (PFN_XkbSetServerInternalMods)load_fn(context, "XkbSetServerInternalMods");
    src_XkbSetIgnoreLockMods = (PFN_XkbSetIgnoreLockMods)load_fn(context, "XkbSetIgnoreLockMods");
    src_XkbVirtualModsToReal = (PFN_XkbVirtualModsToReal)load_fn(context, "XkbVirtualModsToReal");
    src_XkbComputeEffectiveMap = (PFN_XkbComputeEffectiveMap)load_fn(context, "XkbComputeEffectiveMap");
    src_XkbInitCanonicalKeyTypes = (PFN_XkbInitCanonicalKeyTypes)load_fn(context, "XkbInitCanonicalKeyTypes");
    src_XkbAllocKeyboard = (PFN_XkbAllocKeyboard)load_fn(context, "XkbAllocKeyboard");
    src_XkbFreeKeyboard = (PFN_XkbFreeKeyboard)load_fn(context, "XkbFreeKeyboard");
    src_XkbAllocClientMap = (PFN_XkbAllocClientMap)load_fn(context, "XkbAllocClientMap");
    src_XkbAllocServerMap = (PFN_XkbAllocServerMap)load_fn(context, "XkbAllocServerMap");
    src_XkbFreeClientMap = (PFN_XkbFreeClientMap)load_fn(context, "XkbFreeClientMap");
    src_XkbFreeServerMap = (PFN_XkbFreeServerMap)load_fn(context, "XkbFreeServerMap");
    src_XkbAddKeyType = (PFN_XkbAddKeyType)load_fn(context, "XkbAddKeyType");
    src_XkbAllocIndicatorMaps = (PFN_XkbAllocIndicatorMaps)load_fn(context, "XkbAllocIndicatorMaps");
    src_XkbFreeIndicatorMaps = (PFN_XkbFreeIndicatorMaps)load_fn(context, "XkbFreeIndicatorMaps");
    src_XkbGetMap = (PFN_XkbGetMap)load_fn(context, "XkbGetMap");
    src_XkbGetUpdatedMap = (PFN_XkbGetUpdatedMap)load_fn(context, "XkbGetUpdatedMap");
    src_XkbGetMapChanges = (PFN_XkbGetMapChanges)load_fn(context, "XkbGetMapChanges");
    src_XkbRefreshKeyboardMapping = (PFN_XkbRefreshKeyboardMapping)load_fn(context, "XkbRefreshKeyboardMapping");
    src_XkbGetKeyTypes = (PFN_XkbGetKeyTypes)load_fn(context, "XkbGetKeyTypes");
    src_XkbGetKeySyms = (PFN_XkbGetKeySyms)load_fn(context, "XkbGetKeySyms");
    src_XkbGetKeyActions = (PFN_XkbGetKeyActions)load_fn(context, "XkbGetKeyActions");
    src_XkbGetKeyBehaviors = (PFN_XkbGetKeyBehaviors)load_fn(context, "XkbGetKeyBehaviors");
    src_XkbGetVirtualMods = (PFN_XkbGetVirtualMods)load_fn(context, "XkbGetVirtualMods");
    src_XkbGetKeyExplicitComponents = (PFN_XkbGetKeyExplicitComponents)load_fn(context, "XkbGetKeyExplicitComponents");
    src_XkbGetKeyModifierMap = (PFN_XkbGetKeyModifierMap)load_fn(context, "XkbGetKeyModifierMap");
    src_XkbGetKeyVirtualModMap = (PFN_XkbGetKeyVirtualModMap)load_fn(context, "XkbGetKeyVirtualModMap");
    src_XkbAllocControls = (PFN_XkbAllocControls)load_fn(context, "XkbAllocControls");
    src_XkbFreeControls = (PFN_XkbFreeControls)load_fn(context, "XkbFreeControls");
    src_XkbGetControls = (PFN_XkbGetControls)load_fn(context, "XkbGetControls");
    src_XkbSetControls = (PFN_XkbSetControls)load_fn(context, "XkbSetControls");
    src_XkbNoteControlsChanges = (PFN_XkbNoteControlsChanges)load_fn(context, "XkbNoteControlsChanges");
    src_XkbAllocCompatMap = (PFN_XkbAllocCompatMap)load_fn(context, "XkbAllocCompatMap");
    src_XkbFreeCompatMap = (PFN_XkbFreeCompatMap)load_fn(context, "XkbFreeCompatMap");
    src_XkbGetCompatMap = (PFN_XkbGetCompatMap)load_fn(context, "XkbGetCompatMap");
    src_XkbSetCompatMap = (PFN_XkbSetCompatMap)load_fn(context, "XkbSetCompatMap");
    src_XkbAddSymInterpret = (PFN_XkbAddSymInterpret)load_fn(context, "XkbAddSymInterpret");
    src_XkbAllocNames = (PFN_XkbAllocNames)load_fn(context, "XkbAllocNames");
    src_XkbGetNames = (PFN_XkbGetNames)load_fn(context, "XkbGetNames");
    src_XkbSetNames = (PFN_XkbSetNames)load_fn(context, "XkbSetNames");
    src_XkbChangeNames = (PFN_XkbChangeNames)load_fn(context, "XkbChangeNames");
    src_XkbFreeNames = (PFN_XkbFreeNames)load_fn(context, "XkbFreeNames");
    src_XkbGetState = (PFN_XkbGetState)load_fn(context, "XkbGetState");
    src_XkbSetMap = (PFN_XkbSetMap)load_fn(context, "XkbSetMap");
    src_XkbChangeMap = (PFN_XkbChangeMap)load_fn(context, "XkbChangeMap");
    src_XkbSetDetectableAutoRepeat = (PFN_XkbSetDetectableAutoRepeat)load_fn(context, "XkbSetDetectableAutoRepeat");
    src_XkbGetDetectableAutoRepeat = (PFN_XkbGetDetectableAutoRepeat)load_fn(context, "XkbGetDetectableAutoRepeat");
    src_XkbSetAutoResetControls = (PFN_XkbSetAutoResetControls)load_fn(context, "XkbSetAutoResetControls");
    src_XkbGetAutoResetControls = (PFN_XkbGetAutoResetControls)load_fn(context, "XkbGetAutoResetControls");
    src_XkbSetPerClientControls = (PFN_XkbSetPerClientControls)load_fn(context, "XkbSetPerClientControls");
    src_XkbGetPerClientControls = (PFN_XkbGetPerClientControls)load_fn(context, "XkbGetPerClientControls");
    src_XkbCopyKeyType = (PFN_XkbCopyKeyType)load_fn(context, "XkbCopyKeyType");
    src_XkbCopyKeyTypes = (PFN_XkbCopyKeyTypes)load_fn(context, "XkbCopyKeyTypes");
    src_XkbResizeKeyType = (PFN_XkbResizeKeyType)load_fn(context, "XkbResizeKeyType");
    src_XkbResizeKeySyms = (PFN_XkbResizeKeySyms)load_fn(context, "XkbResizeKeySyms");
    src_XkbResizeKeyActions = (PFN_XkbResizeKeyActions)load_fn(context, "XkbResizeKeyActions");
    src_XkbChangeTypesOfKey = (PFN_XkbChangeTypesOfKey)load_fn(context, "XkbChangeTypesOfKey");
    src_XkbChangeKeycodeRange = (PFN_XkbChangeKeycodeRange)load_fn(context, "XkbChangeKeycodeRange");
    src_XkbListComponents = (PFN_XkbListComponents)load_fn(context, "XkbListComponents");
    src_XkbFreeComponentList = (PFN_XkbFreeComponentList)load_fn(context, "XkbFreeComponentList");
    src_XkbGetKeyboard = (PFN_XkbGetKeyboard)load_fn(context, "XkbGetKeyboard");
    src_XkbGetKeyboardByName = (PFN_XkbGetKeyboardByName)load_fn(context, "XkbGetKeyboardByName");
    src_XkbKeyTypesForCoreSymbols = (PFN_XkbKeyTypesForCoreSymbols)load_fn(context, "XkbKeyTypesForCoreSymbols");
    src_XkbApplyCompatMapToKey = (PFN_XkbApplyCompatMapToKey)load_fn(context, "XkbApplyCompatMapToKey");
    src_XkbUpdateMapFromCore = (PFN_XkbUpdateMapFromCore)load_fn(context, "XkbUpdateMapFromCore");
    src_XkbAddDeviceLedInfo = (PFN_XkbAddDeviceLedInfo)load_fn(context, "XkbAddDeviceLedInfo");
    src_XkbResizeDeviceButtonActions = (PFN_XkbResizeDeviceButtonActions)load_fn(context, "XkbResizeDeviceButtonActions");
    src_XkbAllocDeviceInfo = (PFN_XkbAllocDeviceInfo)load_fn(context, "XkbAllocDeviceInfo");
    src_XkbFreeDeviceInfo = (PFN_XkbFreeDeviceInfo)load_fn(context, "XkbFreeDeviceInfo");
    src_XkbNoteDeviceChanges = (PFN_XkbNoteDeviceChanges)load_fn(context, "XkbNoteDeviceChanges");
    src_XkbGetDeviceInfo = (PFN_XkbGetDeviceInfo)load_fn(context, "XkbGetDeviceInfo");
    src_XkbGetDeviceInfoChanges = (PFN_XkbGetDeviceInfoChanges)load_fn(context, "XkbGetDeviceInfoChanges");
    src_XkbGetDeviceButtonActions = (PFN_XkbGetDeviceButtonActions)load_fn(context, "XkbGetDeviceButtonActions");
    src_XkbGetDeviceLedInfo = (PFN_XkbGetDeviceLedInfo)load_fn(context, "XkbGetDeviceLedInfo");
    src_XkbSetDeviceInfo = (PFN_XkbSetDeviceInfo)load_fn(context, "XkbSetDeviceInfo");
    src_XkbChangeDeviceInfo = (PFN_XkbChangeDeviceInfo)load_fn(context, "XkbChangeDeviceInfo");
    src_XkbSetDeviceLedInfo = (PFN_XkbSetDeviceLedInfo)load_fn(context, "XkbSetDeviceLedInfo");
    src_XkbSetDeviceButtonActions = (PFN_XkbSetDeviceButtonActions)load_fn(context, "XkbSetDeviceButtonActions");
    src_XkbToControl = (PFN_XkbToControl)load_fn(context, "XkbToControl");
    src_XkbSetDebuggingFlags = (PFN_XkbSetDebuggingFlags)load_fn(context, "XkbSetDebuggingFlags");
    src_XkbApplyVirtualModChanges = (PFN_XkbApplyVirtualModChanges)load_fn(context, "XkbApplyVirtualModChanges");
    src_XkbUpdateActionVirtualMods = (PFN_XkbUpdateActionVirtualMods)load_fn(context, "XkbUpdateActionVirtualMods");
    src_XkbUpdateKeyTypeVirtualMods = (PFN_XkbUpdateKeyTypeVirtualMods)load_fn(context, "XkbUpdateKeyTypeVirtualMods");
}