#include <GL/glx.h>

// This file was generated by AutoDynamicHeader: https://github.com/bluesillybeard/AutoDynamicHeader and modified

typedef XVisualInfo*(*PFN_glXChooseVisual)( Display *dpy, int screen,
				     int *attribList );
typedef GLXContext(*PFN_glXCreateContext)( Display *dpy, XVisualInfo *vis,
				    GLXContext shareList, Bool direct );
typedef void(*PFN_glXDestroyContext)( Display *dpy, GLXContext ctx );
typedef Bool(*PFN_glXMakeCurrent)( Display *dpy, GLXDrawable drawable,
			    GLXContext ctx);
typedef void(*PFN_glXCopyContext)( Display *dpy, GLXContext src, GLXContext dst,
			    unsigned long mask );
typedef void(*PFN_glXSwapBuffers)( Display *dpy, GLXDrawable drawable );
typedef GLXPixmap(*PFN_glXCreateGLXPixmap)( Display *dpy, XVisualInfo *visual,
				     Pixmap pixmap );
typedef void(*PFN_glXDestroyGLXPixmap)( Display *dpy, GLXPixmap pixmap );
typedef Bool(*PFN_glXQueryExtension)( Display *dpy, int *errorb, int *event );
typedef Bool(*PFN_glXQueryVersion)( Display *dpy, int *maj, int *min );
typedef Bool(*PFN_glXIsDirect)( Display *dpy, GLXContext ctx );
typedef int(*PFN_glXGetConfig)( Display *dpy, XVisualInfo *visual,
			 int attrib, int *value );
typedef GLXContext(*PFN_glXGetCurrentContext)( void );
typedef GLXDrawable(*PFN_glXGetCurrentDrawable)( void );
typedef void(*PFN_glXWaitGL)( void );
typedef void(*PFN_glXWaitX)( void );
typedef void(*PFN_glXUseXFont)( Font font, int first, int count, int list );
typedef char*(*PFN_glXQueryExtensionsString)( Display *dpy, int screen );
typedef char*(*PFN_glXQueryServerString)( Display *dpy, int screen, int name );
typedef char*(*PFN_glXGetClientString)( Display *dpy, int name );
typedef Display*(*PFN_glXGetCurrentDisplay)( void );
typedef GLXFBConfig*(*PFN_glXChooseFBConfig)( Display *dpy, int screen,
                                       const int *attribList, int *nitems );
typedef int(*PFN_glXGetFBConfigAttrib)( Display *dpy, GLXFBConfig config,
                                 int attribute, int *value );
typedef GLXFBConfig*(*PFN_glXGetFBConfigs)( Display *dpy, int screen,
                                     int *nelements );
typedef XVisualInfo*(*PFN_glXGetVisualFromFBConfig)( Display *dpy,
                                              GLXFBConfig config );
typedef GLXWindow(*PFN_glXCreateWindow)( Display *dpy, GLXFBConfig config,
                                  Window win, const int *attribList );
typedef void(*PFN_glXDestroyWindow)( Display *dpy, GLXWindow window );
typedef GLXPixmap(*PFN_glXCreatePixmap)( Display *dpy, GLXFBConfig config,
                                  Pixmap pixmap, const int *attribList );
typedef void(*PFN_glXDestroyPixmap)( Display *dpy, GLXPixmap pixmap );
typedef GLXPbuffer(*PFN_glXCreatePbuffer)( Display *dpy, GLXFBConfig config,
                                    const int *attribList );
typedef void(*PFN_glXDestroyPbuffer)( Display *dpy, GLXPbuffer pbuf );
typedef void(*PFN_glXQueryDrawable)( Display *dpy, GLXDrawable draw, int attribute,
                              unsigned int *value );
typedef GLXContext(*PFN_glXCreateNewContext)( Display *dpy, GLXFBConfig config,
                                       int renderType, GLXContext shareList,
                                       Bool direct );
typedef Bool(*PFN_glXMakeContextCurrent)( Display *dpy, GLXDrawable draw,
                                   GLXDrawable read, GLXContext ctx );
typedef GLXDrawable(*PFN_glXGetCurrentReadDrawable)( void );
typedef int(*PFN_glXQueryContext)( Display *dpy, GLXContext ctx, int attribute,
                            int *value );
typedef void(*PFN_glXSelectEvent)( Display *dpy, GLXDrawable drawable,
                            unsigned long mask );
typedef void(*PFN_glXGetSelectedEvent)( Display *dpy, GLXDrawable drawable,
                                 unsigned long *mask );
typedef __GLXextFuncPtr(*PFN_glXGetProcAddressARB)(const GLubyte *);
typedef void*(*PFN_glXAllocateMemoryNV)(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);
typedef void(*PFN_glXFreeMemoryNV)(GLvoid *pointer);
typedef Bool(*PFN_glXBindTexImageARB)(Display *dpy, GLXPbuffer pbuffer, int buffer);
typedef Bool(*PFN_glXReleaseTexImageARB)(Display *dpy, GLXPbuffer pbuffer, int buffer);
typedef Bool(*PFN_glXDrawableAttribARB)(Display *dpy, GLXDrawable draw, const int *attribList);
typedef int(*PFN_glXGetFrameUsageMESA)(Display *dpy, GLXDrawable drawable, float *usage);
typedef int(*PFN_glXBeginFrameTrackingMESA)(Display *dpy, GLXDrawable drawable);
typedef int(*PFN_glXEndFrameTrackingMESA)(Display *dpy, GLXDrawable drawable);
typedef int(*PFN_glXQueryFrameTrackingMESA)(Display *dpy, GLXDrawable drawable, int64_t *swapCount, int64_t *missedFrames, float *lastMissedUsage);
typedef int(*PFN_glXSwapIntervalMESA)(unsigned int interval);
typedef int(*PFN_glXGetSwapIntervalMESA)(void);
typedef void(*PFN_glXBindTexImageEXT)(Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list);
typedef void(*PFN_glXReleaseTexImageEXT)(Display *dpy, GLXDrawable drawable, int buffer);
PFN_glXChooseVisual src_glXChooseVisual;
PFN_glXCreateContext src_glXCreateContext;
PFN_glXDestroyContext src_glXDestroyContext;
PFN_glXMakeCurrent src_glXMakeCurrent;
PFN_glXCopyContext src_glXCopyContext;
PFN_glXSwapBuffers src_glXSwapBuffers;
PFN_glXCreateGLXPixmap src_glXCreateGLXPixmap;
PFN_glXDestroyGLXPixmap src_glXDestroyGLXPixmap;
PFN_glXQueryExtension src_glXQueryExtension;
PFN_glXQueryVersion src_glXQueryVersion;
PFN_glXIsDirect src_glXIsDirect;
PFN_glXGetConfig src_glXGetConfig;
PFN_glXGetCurrentContext src_glXGetCurrentContext;
PFN_glXGetCurrentDrawable src_glXGetCurrentDrawable;
PFN_glXWaitGL src_glXWaitGL;
PFN_glXWaitX src_glXWaitX;
PFN_glXUseXFont src_glXUseXFont;
PFN_glXQueryExtensionsString src_glXQueryExtensionsString;
PFN_glXQueryServerString src_glXQueryServerString;
PFN_glXGetClientString src_glXGetClientString;
PFN_glXGetCurrentDisplay src_glXGetCurrentDisplay;
PFN_glXChooseFBConfig src_glXChooseFBConfig;
PFN_glXGetFBConfigAttrib src_glXGetFBConfigAttrib;
PFN_glXGetFBConfigs src_glXGetFBConfigs;
PFN_glXGetVisualFromFBConfig src_glXGetVisualFromFBConfig;
PFN_glXCreateWindow src_glXCreateWindow;
PFN_glXDestroyWindow src_glXDestroyWindow;
PFN_glXCreatePixmap src_glXCreatePixmap;
PFN_glXDestroyPixmap src_glXDestroyPixmap;
PFN_glXCreatePbuffer src_glXCreatePbuffer;
PFN_glXDestroyPbuffer src_glXDestroyPbuffer;
PFN_glXQueryDrawable src_glXQueryDrawable;
PFN_glXCreateNewContext src_glXCreateNewContext;
PFN_glXMakeContextCurrent src_glXMakeContextCurrent;
PFN_glXGetCurrentReadDrawable src_glXGetCurrentReadDrawable;
PFN_glXQueryContext src_glXQueryContext;
PFN_glXSelectEvent src_glXSelectEvent;
PFN_glXGetSelectedEvent src_glXGetSelectedEvent;
PFN_glXGetProcAddressARB src_glXGetProcAddressARB;
PFN_glXAllocateMemoryNV src_glXAllocateMemoryNV;
PFN_glXFreeMemoryNV src_glXFreeMemoryNV;
PFN_glXBindTexImageARB src_glXBindTexImageARB;
PFN_glXReleaseTexImageARB src_glXReleaseTexImageARB;
PFN_glXDrawableAttribARB src_glXDrawableAttribARB;
PFN_glXGetFrameUsageMESA src_glXGetFrameUsageMESA;
PFN_glXBeginFrameTrackingMESA src_glXBeginFrameTrackingMESA;
PFN_glXEndFrameTrackingMESA src_glXEndFrameTrackingMESA;
PFN_glXQueryFrameTrackingMESA src_glXQueryFrameTrackingMESA;
PFN_glXSwapIntervalMESA src_glXSwapIntervalMESA;
PFN_glXGetSwapIntervalMESA src_glXGetSwapIntervalMESA;
PFN_glXBindTexImageEXT src_glXBindTexImageEXT;
PFN_glXReleaseTexImageEXT src_glXReleaseTexImageEXT;
#define glXChooseVisual src_glXChooseVisual
#define glXCreateContext src_glXCreateContext
#define glXDestroyContext src_glXDestroyContext
#define glXMakeCurrent src_glXMakeCurrent
#define glXCopyContext src_glXCopyContext
#define glXSwapBuffers src_glXSwapBuffers
#define glXCreateGLXPixmap src_glXCreateGLXPixmap
#define glXDestroyGLXPixmap src_glXDestroyGLXPixmap
#define glXQueryExtension src_glXQueryExtension
#define glXQueryVersion src_glXQueryVersion
#define glXIsDirect src_glXIsDirect
#define glXGetConfig src_glXGetConfig
#define glXGetCurrentContext src_glXGetCurrentContext
#define glXGetCurrentDrawable src_glXGetCurrentDrawable
#define glXWaitGL src_glXWaitGL
#define glXWaitX src_glXWaitX
#define glXUseXFont src_glXUseXFont
#define glXQueryExtensionsString src_glXQueryExtensionsString
#define glXQueryServerString src_glXQueryServerString
#define glXGetClientString src_glXGetClientString
#define glXGetCurrentDisplay src_glXGetCurrentDisplay
#define glXChooseFBConfig src_glXChooseFBConfig
#define glXGetFBConfigAttrib src_glXGetFBConfigAttrib
#define glXGetFBConfigs src_glXGetFBConfigs
#define glXGetVisualFromFBConfig src_glXGetVisualFromFBConfig
#define glXCreateWindow src_glXCreateWindow
#define glXDestroyWindow src_glXDestroyWindow
#define glXCreatePixmap src_glXCreatePixmap
#define glXDestroyPixmap src_glXDestroyPixmap
#define glXCreatePbuffer src_glXCreatePbuffer
#define glXDestroyPbuffer src_glXDestroyPbuffer
#define glXQueryDrawable src_glXQueryDrawable
#define glXCreateNewContext src_glXCreateNewContext
#define glXMakeContextCurrent src_glXMakeContextCurrent
#define glXGetCurrentReadDrawable src_glXGetCurrentReadDrawable
#define glXQueryContext src_glXQueryContext
#define glXSelectEvent src_glXSelectEvent
#define glXGetSelectedEvent src_glXGetSelectedEvent
#define glXGetProcAddressARB src_glXGetProcAddressARB
#define glXAllocateMemoryNV src_glXAllocateMemoryNV
#define glXFreeMemoryNV src_glXFreeMemoryNV
#define glXBindTexImageARB src_glXBindTexImageARB
#define glXReleaseTexImageARB src_glXReleaseTexImageARB
#define glXDrawableAttribARB src_glXDrawableAttribARB
#define glXGetFrameUsageMESA src_glXGetFrameUsageMESA
#define glXBeginFrameTrackingMESA src_glXBeginFrameTrackingMESA
#define glXEndFrameTrackingMESA src_glXEndFrameTrackingMESA
#define glXQueryFrameTrackingMESA src_glXQueryFrameTrackingMESA
#define glXSwapIntervalMESA src_glXSwapIntervalMESA
#define glXGetSwapIntervalMESA src_glXGetSwapIntervalMESA
#define glXBindTexImageEXT src_glXBindTexImageEXT
#define glXReleaseTexImageEXT src_glXReleaseTexImageEXT
void loadGlX(void* context, void *(*load_fn)(void* context, const char* name)) {
    src_glXChooseVisual = (PFN_glXChooseVisual)load_fn(context, "glXChooseVisual");
    src_glXCreateContext = (PFN_glXCreateContext)load_fn(context, "glXCreateContext");
    src_glXDestroyContext = (PFN_glXDestroyContext)load_fn(context, "glXDestroyContext");
    src_glXMakeCurrent = (PFN_glXMakeCurrent)load_fn(context, "glXMakeCurrent");
    src_glXCopyContext = (PFN_glXCopyContext)load_fn(context, "glXCopyContext");
    src_glXSwapBuffers = (PFN_glXSwapBuffers)load_fn(context, "glXSwapBuffers");
    src_glXCreateGLXPixmap = (PFN_glXCreateGLXPixmap)load_fn(context, "glXCreateGLXPixmap");
    src_glXDestroyGLXPixmap = (PFN_glXDestroyGLXPixmap)load_fn(context, "glXDestroyGLXPixmap");
    src_glXQueryExtension = (PFN_glXQueryExtension)load_fn(context, "glXQueryExtension");
    src_glXQueryVersion = (PFN_glXQueryVersion)load_fn(context, "glXQueryVersion");
    src_glXIsDirect = (PFN_glXIsDirect)load_fn(context, "glXIsDirect");
    src_glXGetConfig = (PFN_glXGetConfig)load_fn(context, "glXGetConfig");
    src_glXGetCurrentContext = (PFN_glXGetCurrentContext)load_fn(context, "glXGetCurrentContext");
    src_glXGetCurrentDrawable = (PFN_glXGetCurrentDrawable)load_fn(context, "glXGetCurrentDrawable");
    src_glXWaitGL = (PFN_glXWaitGL)load_fn(context, "glXWaitGL");
    src_glXWaitX = (PFN_glXWaitX)load_fn(context, "glXWaitX");
    src_glXUseXFont = (PFN_glXUseXFont)load_fn(context, "glXUseXFont");
    src_glXQueryExtensionsString = (PFN_glXQueryExtensionsString)load_fn(context, "glXQueryExtensionsString");
    src_glXQueryServerString = (PFN_glXQueryServerString)load_fn(context, "glXQueryServerString");
    src_glXGetClientString = (PFN_glXGetClientString)load_fn(context, "glXGetClientString");
    src_glXGetCurrentDisplay = (PFN_glXGetCurrentDisplay)load_fn(context, "glXGetCurrentDisplay");
    src_glXChooseFBConfig = (PFN_glXChooseFBConfig)load_fn(context, "glXChooseFBConfig");
    src_glXGetFBConfigAttrib = (PFN_glXGetFBConfigAttrib)load_fn(context, "glXGetFBConfigAttrib");
    src_glXGetFBConfigs = (PFN_glXGetFBConfigs)load_fn(context, "glXGetFBConfigs");
    src_glXGetVisualFromFBConfig = (PFN_glXGetVisualFromFBConfig)load_fn(context, "glXGetVisualFromFBConfig");
    src_glXCreateWindow = (PFN_glXCreateWindow)load_fn(context, "glXCreateWindow");
    src_glXDestroyWindow = (PFN_glXDestroyWindow)load_fn(context, "glXDestroyWindow");
    src_glXCreatePixmap = (PFN_glXCreatePixmap)load_fn(context, "glXCreatePixmap");
    src_glXDestroyPixmap = (PFN_glXDestroyPixmap)load_fn(context, "glXDestroyPixmap");
    src_glXCreatePbuffer = (PFN_glXCreatePbuffer)load_fn(context, "glXCreatePbuffer");
    src_glXDestroyPbuffer = (PFN_glXDestroyPbuffer)load_fn(context, "glXDestroyPbuffer");
    src_glXQueryDrawable = (PFN_glXQueryDrawable)load_fn(context, "glXQueryDrawable");
    src_glXCreateNewContext = (PFN_glXCreateNewContext)load_fn(context, "glXCreateNewContext");
    src_glXMakeContextCurrent = (PFN_glXMakeContextCurrent)load_fn(context, "glXMakeContextCurrent");
    src_glXGetCurrentReadDrawable = (PFN_glXGetCurrentReadDrawable)load_fn(context, "glXGetCurrentReadDrawable");
    src_glXQueryContext = (PFN_glXQueryContext)load_fn(context, "glXQueryContext");
    src_glXSelectEvent = (PFN_glXSelectEvent)load_fn(context, "glXSelectEvent");
    src_glXGetSelectedEvent = (PFN_glXGetSelectedEvent)load_fn(context, "glXGetSelectedEvent");
    src_glXGetProcAddressARB = (PFN_glXGetProcAddressARB)load_fn(context, "glXGetProcAddressARB");
    src_glXAllocateMemoryNV = (PFN_glXAllocateMemoryNV)load_fn(context, "glXAllocateMemoryNV");
    src_glXFreeMemoryNV = (PFN_glXFreeMemoryNV)load_fn(context, "glXFreeMemoryNV");
    src_glXBindTexImageARB = (PFN_glXBindTexImageARB)load_fn(context, "glXBindTexImageARB");
    src_glXReleaseTexImageARB = (PFN_glXReleaseTexImageARB)load_fn(context, "glXReleaseTexImageARB");
    src_glXDrawableAttribARB = (PFN_glXDrawableAttribARB)load_fn(context, "glXDrawableAttribARB");
    src_glXGetFrameUsageMESA = (PFN_glXGetFrameUsageMESA)load_fn(context, "glXGetFrameUsageMESA");
    src_glXBeginFrameTrackingMESA = (PFN_glXBeginFrameTrackingMESA)load_fn(context, "glXBeginFrameTrackingMESA");
    src_glXEndFrameTrackingMESA = (PFN_glXEndFrameTrackingMESA)load_fn(context, "glXEndFrameTrackingMESA");
    src_glXQueryFrameTrackingMESA = (PFN_glXQueryFrameTrackingMESA)load_fn(context, "glXQueryFrameTrackingMESA");
    src_glXSwapIntervalMESA = (PFN_glXSwapIntervalMESA)load_fn(context, "glXSwapIntervalMESA");
    src_glXGetSwapIntervalMESA = (PFN_glXGetSwapIntervalMESA)load_fn(context, "glXGetSwapIntervalMESA");
    src_glXBindTexImageEXT = (PFN_glXBindTexImageEXT)load_fn(context, "glXBindTexImageEXT");
    src_glXReleaseTexImageEXT = (PFN_glXReleaseTexImageEXT)load_fn(context, "glXReleaseTexImageEXT");
}